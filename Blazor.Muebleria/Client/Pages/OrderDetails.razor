@page "/orderDetails"
@inject IProductCategoryService ProductCategoryService
<p>@Message</p>
<h3>OrderDetails</h3>

@if(productCategories != null && Order != null)
{
	<label>Categorias</label>
	<EditForm Model="@Order">
		<InputSelect class="form-control col-5" @bind-Value="@Order.ProductCategoryId">
			@foreach (var item in productCategories)
			{
				<option value="@item.Id">@item.Name</option>
			}
		</InputSelect>
	</EditForm>
	<label>Productos</label>
	<EditForm Model="@Order">
		<InputSelect class="form-control col-5" 
			Value="@productId"
				 ValueChanged="@((int categoryId))">
			@foreach (var item in products)
			{
				<option value="@item.Id">@item.Name</option>
			}
		</InputSelect>
	</EditForm>
}
else
{
	<p><em>Cargando Categorias...</em></p>
}


@code {
	public Order Order;
	public IEnumerable<ProductCategory> productCategories;
	public IEnumerable<Product> products;
	public int productId { get; set; }
	public string Message { get; set; }

	protected async override Task OnInitializedAsync()
	{
		try
		{
			Order = new Order();
			productCategories = await ProductCategoryService.GetProductCategories();

		}
		catch(Exception ex)
		{
			Message = "Ha ocurrido un error..." + ex.Message;
		}
		
	}
}
